/*
 * This file is part of Spout.
 *
 * Copyright (c) 2011 Spout LLC <http://www.spout.org/>
 * Spout is licensed under the Spout License Version 1.
 *
 * Spout is free software: you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option)
 * any later version.
 *
 * In addition, 180 days after any changes are published, you can use the
 * software, incorporating those changes, under the terms of the MIT license,
 * as described in the Spout License Version 1.
 *
 * Spout is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
 * more details.
 *
 * You should have received a copy of the GNU Lesser General Public License,
 * the MIT license and the Spout License Version 1 along with this program.
 * If not, see <http://www.gnu.org/licenses/> for the GNU Lesser General Public
 * License and see <http://spout.in/licensev1> for the full license, including
 * the MIT license.
 */
package org.spout.math.test;

import org.junit.Assert;

import org.spout.math.vector.Vector2#E#;
import org.spout.math.vector.Vector3#E#;
import org.spout.math.vector.Vector4#E#;
import org.spout.math.vector.VectorN#E#;

public class TestUtil#E# {
	public static void assertEquals(#e# value, #e# expected) {
		Assert.assertEquals(expected, value);
	}

    public static void assertEquals(#e# value, #EOverload# expected) {
        assertEquals(value, (#e#) expected);
    }
	public static void assertEquals(Vector2#E# v, #e# x, #e# y) {
		assertEquals(v.getX(), x);
		assertEquals(v.getY(), y);
	}

    public static void assertEquals(Vector2#E# v, #EOverload# x, #EOverload# y) {
        assertEquals(v, (#e#) x, (#e#) y);
    }

	public static void assertEquals(Vector3#E# v, #e# x, #e# y, #e# z) {
		assertEquals(v.getX(), x);
		assertEquals(v.getY(), y);
		assertEquals(v.getZ(), z);
	}

    public static void assertEquals(Vector3#E# v, #EOverload# x, #EOverload# y, #EOverload# z) {
            assertEquals(v, (#e#) x, (#e#) y, (#e#) z);
        }

	public static void assertEquals(Vector4#E# v, #e# x, #e# y, #e# z, #e# w) {
		assertEquals(v.getX(), x);
		assertEquals(v.getY(), y);
		assertEquals(v.getZ(), z);
		assertEquals(v.getW(), w);
	}

    public static void assertEquals(Vector4#E# v, #EOverload# x, #EOverload# y, #EOverload# z, #EOverload# w) {
        assertEquals(v, (#e#) x, (#e#) y, (#e#) z, (#e#) w);
    }

	public static void assertEquals(VectorN#E# v, #e#... f) {
		Assert.assertArrayEquals(f, v.toArray());
	}

	public static void assertEquals(#e#[] a, #e#... f) {
		Assert.assertArrayEquals(f, a);
	}
}
